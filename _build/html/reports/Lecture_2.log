Traceback (most recent call last):
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\asyncio\base_events.py", line 642, in run_until_complete
    return future.result()
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\mhelsaye\Anaconda3\envs\TEP4222\lib\site-packages\nbclient\client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
(ValueAdded/1000).loc['Gross operating surplus'].plot(kind='hbar',xlabel='Surplus in billion $')
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mKeyError[0m                                  Traceback (most recent call last)
[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\indexes\base.py[0m in [0;36mget_loc[1;34m(self, key, method, tolerance)[0m
[0;32m   3620[0m             [1;32mtry[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 3621[1;33m                 [1;32mreturn[0m [0mself[0m[1;33m.[0m[0m_engine[0m[1;33m.[0m[0mget_loc[0m[1;33m([0m[0mcasted_key[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   3622[0m             [1;32mexcept[0m [0mKeyError[0m [1;32mas[0m [0merr[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\_libs\index.pyx[0m in [0;36mpandas._libs.index.IndexEngine.get_loc[1;34m()[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\_libs\index.pyx[0m in [0;36mpandas._libs.index.IndexEngine.get_loc[1;34m()[0m

[1;32mpandas\_libs\hashtable_class_helper.pxi[0m in [0;36mpandas._libs.hashtable.PyObjectHashTable.get_item[1;34m()[0m

[1;32mpandas\_libs\hashtable_class_helper.pxi[0m in [0;36mpandas._libs.hashtable.PyObjectHashTable.get_item[1;34m()[0m

[1;31mKeyError[0m: 'Gross operating surplus'

The above exception was the direct cause of the following exception:

[1;31mKeyError[0m                                  Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_2744/3194006018.py[0m in [0;36m<module>[1;34m[0m
[1;32m----> 1[1;33m [1;33m([0m[0mValueAdded[0m[1;33m/[0m[1;36m1000[0m[1;33m)[0m[1;33m.[0m[0mloc[0m[1;33m[[0m[1;34m'Gross operating surplus'[0m[1;33m][0m[1;33m.[0m[0mplot[0m[1;33m([0m[0mkind[0m[1;33m=[0m[1;34m'hbar'[0m[1;33m,[0m[0mxlabel[0m[1;33m=[0m[1;34m'Surplus in billion $'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m
[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\indexing.py[0m in [0;36m__getitem__[1;34m(self, key)[0m
[0;32m    965[0m [1;33m[0m[0m
[0;32m    966[0m             [0mmaybe_callable[0m [1;33m=[0m [0mcom[0m[1;33m.[0m[0mapply_if_callable[0m[1;33m([0m[0mkey[0m[1;33m,[0m [0mself[0m[1;33m.[0m[0mobj[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 967[1;33m             [1;32mreturn[0m [0mself[0m[1;33m.[0m[0m_getitem_axis[0m[1;33m([0m[0mmaybe_callable[0m[1;33m,[0m [0maxis[0m[1;33m=[0m[0maxis[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    968[0m [1;33m[0m[0m
[0;32m    969[0m     [1;32mdef[0m [0m_is_scalar_access[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mkey[0m[1;33m:[0m [0mtuple[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\indexing.py[0m in [0;36m_getitem_axis[1;34m(self, key, axis)[0m
[0;32m   1200[0m         [1;31m# fall thru to straight lookup[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1201[0m         [0mself[0m[1;33m.[0m[0m_validate_key[0m[1;33m([0m[0mkey[0m[1;33m,[0m [0maxis[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1202[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0m_get_label[0m[1;33m([0m[0mkey[0m[1;33m,[0m [0maxis[0m[1;33m=[0m[0maxis[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1203[0m [1;33m[0m[0m
[0;32m   1204[0m     [1;32mdef[0m [0m_get_slice_axis[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mslice_obj[0m[1;33m:[0m [0mslice[0m[1;33m,[0m [0maxis[0m[1;33m:[0m [0mint[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\indexing.py[0m in [0;36m_get_label[1;34m(self, label, axis)[0m
[0;32m   1151[0m     [1;32mdef[0m [0m_get_label[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mlabel[0m[1;33m,[0m [0maxis[0m[1;33m:[0m [0mint[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   1152[0m         [1;31m# GH#5667 this will fail if the label is not present in the axis.[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 1153[1;33m         [1;32mreturn[0m [0mself[0m[1;33m.[0m[0mobj[0m[1;33m.[0m[0mxs[0m[1;33m([0m[0mlabel[0m[1;33m,[0m [0maxis[0m[1;33m=[0m[0maxis[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   1154[0m [1;33m[0m[0m
[0;32m   1155[0m     [1;32mdef[0m [0m_handle_lowerdim_multi_index_axis0[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mtup[0m[1;33m:[0m [0mtuple[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\generic.py[0m in [0;36mxs[1;34m(self, key, axis, level, drop_level)[0m
[0;32m   3862[0m                     [0mnew_index[0m [1;33m=[0m [0mindex[0m[1;33m[[0m[0mloc[0m[1;33m][0m[1;33m[0m[1;33m[0m[0m
[0;32m   3863[0m         [1;32melse[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 3864[1;33m             [0mloc[0m [1;33m=[0m [0mindex[0m[1;33m.[0m[0mget_loc[0m[1;33m([0m[0mkey[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   3865[0m [1;33m[0m[0m
[0;32m   3866[0m             [1;32mif[0m [0misinstance[0m[1;33m([0m[0mloc[0m[1;33m,[0m [0mnp[0m[1;33m.[0m[0mndarray[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\Anaconda3\envs\TEP4222\lib\site-packages\pandas\core\indexes\base.py[0m in [0;36mget_loc[1;34m(self, key, method, tolerance)[0m
[0;32m   3621[0m                 [1;32mreturn[0m [0mself[0m[1;33m.[0m[0m_engine[0m[1;33m.[0m[0mget_loc[0m[1;33m([0m[0mcasted_key[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m   3622[0m             [1;32mexcept[0m [0mKeyError[0m [1;32mas[0m [0merr[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m-> 3623[1;33m                 [1;32mraise[0m [0mKeyError[0m[1;33m([0m[0mkey[0m[1;33m)[0m [1;32mfrom[0m [0merr[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m   3624[0m             [1;32mexcept[0m [0mTypeError[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m   3625[0m                 [1;31m# If we have a listlike key, _check_indexing_error will raise[0m[1;33m[0m[1;33m[0m[0m

[1;31mKeyError[0m: 'Gross operating surplus'
KeyError: 'Gross operating surplus'

